@model Cobit_Matrix.ViewModel.MatrizViewModel

@{
    ViewData["Title"] = "Matriz Objetivos de Gobierno";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css"/>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="~/css/styles.css"/>

<h2>@ViewData["Title"]</h2>

<div>
    <button type="button" class="btn btn-warning" id="resetButton">Resetear</button>
    <button type="button" class="btn btn-success" id="lockButton">Guardar Cambios</button>
    <button type="button" class="btn btn-primary" id="nextButton" disabled>Siguiente</button>
</div>

<div class="table-responsive">
    <table id="matrixTable" class="display" style="width:100%">
        <thead>
        <tr>
            <th>Matriz Cobit 19</th>
            @foreach (var metaAlineamiento in Model.MetaAlineamientos)
            {
            <th>
                @metaAlineamiento.Codigo<br/><small>@metaAlineamiento.Descripcion</small>
            </th>
            }
        </tr>
        </thead>
        <tbody>
        @foreach (var objGobierno in Model.ObjetivosGobierno)
        {
        <tr>
            <td>
                <button type="button" class="highlight-row-btn btn btn-secondary">R</button>
                @objGobierno.Codigo<br/><small>@objGobierno.Descripcion</small>
            </td>
            @foreach (var metaEmpresarial in Model.MetaEmpresariales)
            {
            <td>
                <select class="form-control matrix-select">
                    <option value="">--</option>
                    <option value="S">S</option>
                    <option value="P">P</option>
                </select>
            </td>
            }
        </tr>
        }
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function () {
        var table = $('#matrixTable').DataTable({
            paging: false,
            searching: false,
            info: false,
            ordering: false,
        });

        var isLocked = false; 

        // Retrieve highlighted rows from local storage
        var highlightedRowIndexes = @Html.Raw(Json.Serialize(Model.HighlightedRowIndexes));

        // Highlight columns based on highlightedRowIndexes
        highlightedRowIndexes.forEach(function (rowIndex) {
            table.column(rowIndex + 1).nodes().to$().css('background-color', '#71a4c6');
            $(table.column(rowIndex + 1).header()).css('background-color', '#71a4c6');
        });

        // Function to reset the matrix
        $('#resetButton').on('click', function () {
            table.cells().nodes().to$().find('select').val('').prop('disabled', false);
            table.cells().nodes().to$().removeClass('highlight');
            table.columns().nodes().to$().css('background-color', '')
            table.column().nodes().to$().css('background-color', '');
            $(table.column().header()).css('background-color', '');
            table.rows().nodes().to$().css('background-color', '').removeClass('highlight');
            $('#nextButton').prop('disabled', true);
            $('#lockButton').prop('disabled', false);
            isLocked = false;
            $('#matrixTable thead th').css('background-color', '');
        });

        // Function to lock the matrix
        $('#lockButton').on('click', function () {
            table.cells().nodes().to$().find('select').prop('disabled', true);
            $('#nextButton').prop('disabled', false);
            $('#lockButton').prop('disabled', true);
            $('#resetButton').prop('disabled', false);
            isLocked = true;

            var highlightedRows = [];
            table.rows().nodes().to$().each(function (index) {
                if ($(this).hasClass('highlight')) {
                    highlightedRows.push(index);
                }
            });

            $.ajax({
                url: '@Url.Action("SaveChanges", "Matriz")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ highlightedRowIndexes: highlightedRows }),
                success: function (response) {
                    if (response.success) {
                        console.log('Changes saved successfully');
                    } else {
                        console.error('Failed to save changes');
                    }
                }
            });
        });

        // Function to go to the next page
        $('#nextButton').on('click', function () {
            window.location.href = '/Matriz/Report'; 
        });

        // Left header button click handler
        $('#matrixTable tbody').on('click', '.highlight-row-btn', function (e) {
            e.stopPropagation();

            if (isLocked) return;

            var row = $(this).closest('tr');
            row.toggleClass('highlight');
            row.find('select').prop('disabled', row.hasClass('highlight'));

            if (row.hasClass('highlight')) {
                row.find('select').each(function () {
                    if ($(this).val() === 'P') {
                        var colIdx = $(this).closest('td').index();
                        table.column(colIdx).nodes().to$().css('background-color', '#71a4c6');
                        $(table.column(colIdx).header()).css('background-color', '#71a4c6');
                    }
                });
            } else {
                row.find('select').each(function () {
                    if ($(this).val() === 'P') {
                        var colIdx = $(this).closest('td').index();
                        table.column(colIdx).nodes().to$().css('background-color', '');
                        $(table.column(colIdx).header()).css('background-color', '');
                    }
                });
            }
        });
    });
</script>


<style>
    .highlight {
        background-color: #4fc3a2 !important;
    }
    .highlight-column {
        background-color: #ffff99 !important;
    }
    table.dataTable tbody tr.selected {
        background-color: transparent !important;
    }
</style>
