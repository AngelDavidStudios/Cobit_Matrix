@model Cobit_Matrix.ViewModel.MatrizViewModel
@{
ViewData["Title"] = "Matriz de Metas";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="~/css/styles.css" />

<h2>@ViewData["Title"]</h2>

<div>
    <button type="button" class="btn btn-warning" id="resetButton">Resetear</button>
    <button type="button" class="btn btn-success" id="lockButton">Guardar Cambios</button>
    <button type="button" class="btn btn-primary" id="nextButton" disabled>Siguiente</button>
</div>
<div class="table-responsive">
    <table id="matrixTable" class="display" style="width:100%">
        <thead>
        <tr>
            <th>Meta Alineamiento</th>
            @foreach (var metaEmpresarial in Model.MetaEmpresariales)
            {
                <th>@metaEmpresarial.Codigo<br /><small>@metaEmpresarial.Descripcion</small></th>
            }
        </tr>
        </thead>
        <tbody>
        @foreach (var metaAlineamiento in Model.MetaAlineamientos)
        {
            <tr>
                <td>@metaAlineamiento.Codigo<br /><small>@metaAlineamiento.Descripcion</small></td>
                @foreach (var metaEmpresarial in Model.MetaEmpresariales)
                {
                    <td>
                        <select class="form-control matrix-select">
                            <option value="">--</option>
                            <option value="S">S</option>
                            <option value="P">P</option>
                        </select>
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function () {
        var table = $('#matrixTable').DataTable({
            paging: false,
            searching: false,
            info: false,
            ordering: false, // This removes the default sorting functionality
        });

        var isLocked = false; // Flag to track the lock state

        // Function to reset the matrix
        $('#resetButton').on('click', function () {
            table.cells().nodes().to$().find('select').val('').prop('disabled', false);
            table.cells().nodes().to$().removeClass('highlight');
            table.rows().nodes().to$().css('background-color', '').removeClass('filaHight');
            $('#nextButton').prop('disabled', true);
            $('#lockButton').prop('disabled', false);
            isLocked = false; // Reset the lock state
        });

        // Function to lock the matrix
        $('#lockButton').on('click', function () {
            table.cells().nodes().to$().find('select').prop('disabled', true);
            $('#nextButton').prop('disabled', false);
            $('#lockButton').prop('disabled', true);
            $('#resetButton').prop('disabled', false);
            isLocked = true; // Set the lock state
        });

        // Function to go to the next page
        $('#nextButton').on('click', function () {
            window.location.href = '/nextPage'; // Replace with the actual URL of the next page
        });

        // Existing column click handler
        $('#matrixTable thead').on('click', 'th', function () {
            if (isLocked) return; // Prevent highlighting if the matrix is locked

            var colIdx = $(this).index();
            table.column(colIdx).nodes().to$().each(function () {
                var cell = $(this);
                cell.toggleClass('highlight');
                var select = cell.find('select');
                if (cell.hasClass('highlight')) {
                    select.prop('disabled', true);
                } else {
                    select.prop('disabled', false);
                }
            });

            table.rows().every(function () {
                var row = this.nodes().to$();
                var cell = row.find('td').eq(colIdx);
                var containsP = cell.find('select').val() === 'P';
                if (containsP) {
                    if (row.hasClass('filaHight')) {
                        row.css('background-color', '');
                        row.removeClass('filaHight');
                    } else {
                        row.css('background-color', '#4fc3a2');
                        row.addClass('filaHight');
                    }
                }
            });
        });
    });
</script>